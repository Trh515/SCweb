@model System.Data.DataTable
<!DOCTYPE html>
<html lang="en">
<head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
    <meta charset="utf-8" />
    <title>权限管理</title>

    <meta name="description" content="Common UI Features &amp; Elements" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0" />
    <link rel="stylesheet" href="/skins/css/bootstrapStyle.css" type="text/css">
    <link href="/assets/css/ace.min.css" rel="stylesheet" />
</head>

<body class="no-skin">
    <!-- #section:basics/navbar.layout -->
    <!-- /section:basics/navbar.layout -->
    <div class="main-container" id="main-container">

        <!-- #section:basics/sidebar -->
        <!-- /section:basics/sidebar -->
        <div class="main-content">


            <div class="page-content">

                <div class="page-content-area">

                    <div class="row">
                        <div class="col-xs-12">

                            <div class="row">
                                <div class="col-sm-12">
                                    <div class="widget-box widget-color-blue">
                                        <div class="widget-header">
                                            <h4 class="widget-title lighter smaller">权限管理</h4>
                                        </div>
                                        <ul id="treeDemo" class="ztree"></ul>

                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>


        <a href="#" id="btn-scroll-up" class="btn-scroll-up btn btn-sm btn-inverse">
            <i class="ace-icon fa fa-angle-double-up icon-only bigger-110"></i>
        </a>
    </div><!-- /.main-container -->
    <!-- basic scripts -->
    <!--[if !IE]> -->
    <!-- <![endif]-->
    <!--[if IE]>
    <script type="text/javascript">
     window.jQuery || document.write("<script src='assets/js/jquery1x.min.js'>"+"<"+"/script>");
    </script>
    <![endif]-->

    <script src="/Scripts/jquery-1.9.1.min.js"></script>
    <script type="text/javascript" src="/layer/layer.js"></script>
    <script src="/js/jquery.ztree.core.min.js"></script>
    <script src="/js/jquery.ztree.excheck.min.js"></script>
    <script src="/js/jquery.ztree.exedit.min.js"></script>
    <SCRIPT type="text/javascript">
        var setting = {
            view: {
                addHoverDom: addHoverDom,//当鼠标移动到节点上时，显示用户自定义控件
                removeHoverDom: removeHoverDom,//离开节点时的操作
                selectedMulti: false
            },
            check: {
                enable: false//单独设置为true时，可加载修改、删除图标
            },
            data: {
                simpleData: {
                    enable: true
                }
            },
            edit: {
                enable: true
            },
            callback: {
               // onClick: zTreeOnClick, //单击事件
                onRemove: onRemove, //移除事件
                beforeRemove: beforeRemove,//移除钱提示事件
                onRename: onRename, //修改事件
                beforeRename: beforeRename,//修改前提示
                beforeDrag: zTreeBeforeDrag //禁止拖拽
            }
        };

        //var zNodes = [
        //{ id: 1, pId: 0, name: "商品进度", open: true },
        //{ id: 101, pId: 1, name: "最简单的树 --  标准 JSON 数据" },
        //{ id: 102, pId: 1, name: "最简单的树 --  简单 JSON 数据" },
        //{ id: 103, pId: 1, name: "不显示 连接线" },
        //{ id: 104, pId: 1, name: "不显示 节点 图标" },

        //{ id: 2, pId: 0, name: "供应商管理", open: false },
        //{ id: 201, pId: 2, name: "Checkbox 勾选操作" },
        //{ id: 206, pId: 2, name: "Checkbox nocheck 演示" },
        //{ id: 207, pId: 2, name: "Checkbox chkDisabled 演示" },
        //{ id: 208, pId: 2, name: "Checkbox halfCheck 演示" },
        //];

        //关闭拖拽功能
        function zTreeBeforeDrag(treeId, treeNodes) {
            return false;
        };

        //初始化树,将后台查到的值传到前台
        $(document).ready(function () {
            $.ajax({
                url: "/Install/ZTreeAuthorityInfo",
                type: "post",
                data: {},
                success: function (data) {
                    if (data != "") {
                        var zTree = eval("(" + data + ")");
                        $.fn.zTree.init($("#treeDemo"), setting, zTree);
                    }
                },
                error: function () {
                    layer.alert("服务器连接超时!");
                }
            })
        });

        var newCount = 1;
        function addHoverDom(treeId, treeNode) {
            var sObj = $("#" + treeNode.tId + "_span");//获取节点信息
            if (treeNode.editNameFlag || $("#addBtn_" + treeNode.tId).length > 0) return;
            var addStr = "<span class='button add' id='addBtn_" + treeNode.tId
                + "' title='add node' onfocus='this.blur();'></span>";//定义添加按钮
            sObj.after(addStr);//加载添加按钮
            var btn = $("#addBtn_" + treeNode.tId);

            //绑定添加事件，并定义添加操作
            if (btn) btn.bind("click", function () {
                var zTree = $.fn.zTree.getZTreeObj("treeDemo");
                var menuSon = treeNode.id; //获取主节点ID
                var menuName = "new node"; //定义新节点名称
                $.post("/Install/addTree", { menuSon: menuSon, menuName: menuName }, function (data) {
                    var newID = data;//获取新加节点的ID
                    zTree.addNodes(treeNode, { id: newID, pId: treeNode.id, name: menuName }); //页面上添加节点
                })
                //zTree.addNodes(treeNode, { id: (100 + newCount), pId: treeNode.id, name: "new node" + (newCount++) });
                return false;
            });
        };
        //修改节点
        function onRename(e, treeId, treeNode, isCancel) {
            //需要对名字做判定的，可以来这里写~~
            //treeNode.id : 获取修改项的数据库权限ID
            //treeNode.name : 获取修改项的数据库menuName
            //alert(treeNode.id + "|" + treeNode.name);
            $.post("/Install/UpdateTree", { menuid: treeNode.id, menuName: treeNode.name }, function (data) {
                if (data=="success") {
                    layer.alert("修改成功!");
                }
                else {
                    layer.alert("修改失败!");
                }
            })
        }
        //修改前判断
        function beforeRename(treeId, treeNode, newName, isCancel) {
            if (newName.length == 0) {
                layer.alert("节点名称不能为空.");
                return false;
            }
            return true;
        }

        //删除节点
        function onRemove(e, treeId, treeNode) {
            $.post("/Install/DelTree?menuid=" + treeNode.id)
        }
        //删除前提示
        function beforeRemove(treeId, treeNode) {
            var zTree = $.fn.zTree.getZTreeObj("treeDemo");
            zTree.selectNode(treeNode);
            return confirm("确认删除 节点 -- " + treeNode.name + " 吗？");
        }

        function removeHoverDom(treeId, treeNode) {
            $("#addBtn_" + treeNode.tId).unbind().remove();
        };




    </SCRIPT>
</body>
</html>
